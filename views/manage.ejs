<!DOCTYPE html>
<html>
<head>
    <title>Manage Requests</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="/styles.css">
</head>
<body>
    <div class="container">
        <h1 class="text-center my-4">관리</h1>
        <ul id="song-list" class="list-group">
            <li class="list-group-item d-flex justify-content-between align-items-center header-row">
                <span>신청곡</span>
                <span class="song-requester">신청자</span>
                <span style="margin-left: 64px;">작업</span>
            </li>
            <% songs.forEach(song => { %>
                <li id="song-<%= song.id %>" class="list-group-item d-flex justify-content-between align-items-center <%= song.archived ? 'archived' : '' %> <%= song.completed ? 'completedBackground' : '' %>">
                    <span class="<%= song.completed ? 'completed' : '' %>"><%= song.song %></span>
                    <span class="song-requester"><i><%= song.name %></i></span>
                    <div>
                        <button class="btn-action btn <%= song.completed ? 'btn-warning' : 'btn-success' %> btn-sm" data-id="<%= song.id %>" data-action="<%= song.completed ? 'uncomplete' : 'complete' %>">
                            <%= song.completed ? '취소' : '완료' %>
                        </button>
                        <button class="btn-action btn <%= song.archived ? 'btn-secondary' : 'btn-danger' %> btn-sm" data-id="<%= song.id %>" data-action="<%= song.archived ? 'unarchive' : 'archive' %>">
                            <%= song.archived ? '복원' : '제거' %>
                        </button>
                    </div>
                </li>
            <% }) %>
        </ul>
        <div class="text-center my-4">
            <a href="/" class="btn btn-secondary">목록으로 돌아가기</a>
        </div>
        <div class="text-center my-4" style="background-color: magenta;">
            <div>
                <form action="/manage/reset" method="POST" style="display:inline;" onsubmit="return confirmReset()">
                    <button type="submit" class="btn btn-danger">초기화</button>
                </form>
            </div>
            <div>
                <a href="/manage/backup" class="btn btn-secondary">백업 파일 다운로드</a>
            </div>
            <div>
                <form action="/manage/restore" method="POST" enctype="multipart/form-data" style="display:inline;">
                    <input type="file" name="backup" style="display:inline-block;">
                    <button type="submit" class="btn btn-info">복원</button>
                </form>
            </div>
        </div>
    </div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        function confirmReset() {
            return confirm('백업을 따로 안 했으면 복구 불가능합니다. 주의하세요.');
        }

        function handleSubmit(event, songId, action) {
            event.preventDefault();
            const url = `/manage/${action}/${songId}`;
            fetch(url, {
                method: 'POST',
            }).then(response => response.json())
            .then(data => {
                if (data.success) {
                    // 처리 성공 시 필요한 로직 추가
                } else {
                    console.error('Error: Response not successful');
                }
            }).catch(error => {
                console.error('Error:', error);
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            var socket = io();

            document.getElementById('song-list').addEventListener('click', function(event) {
                if (event.target.classList.contains('btn-action')) {
                    const songId = event.target.dataset.id;
                    const action = event.target.dataset.action;
                    handleSubmit(event, songId, action);
                }
            });

            function updateSongElement(id, completed, archived) {
                var li = document.getElementById('song-' + id);
                if (li) {
                    const span = li.querySelector('span');
                    if (completed !== undefined) {
                        span.classList.toggle('completed', completed);
                        li.classList.toggle('completedBackground', completed);
                        const button = li.querySelector('.btn-action[data-action^="complete"], .btn-action[data-action^="uncomplete"]');
                        if (button) {
                            button.textContent = completed ? "취소" : "완료";
                            button.classList.toggle('btn-warning', completed);
                            button.classList.toggle('btn-success', !completed);
                            button.dataset.action = completed ? 'uncomplete' : 'complete';
                        }
                    }
                    if (archived !== undefined) {
                        li.classList.toggle('archived', archived);
                        const button = li.querySelector('.btn-action[data-action^="archive"], .btn-action[data-action^="unarchive"]');
                        if (button) {
                            button.textContent = archived ? "복원" : "제거";
                            button.classList.toggle('btn-secondary', archived);
                            button.classList.toggle('btn-danger', !archived);
                            button.dataset.action = archived ? 'unarchive' : 'archive';
                        }
                    }
                }
            }

            socket.on('songRequest', function(song) {
                var li = document.createElement('li');
                li.className = 'list-group-item d-flex justify-content-between align-items-center';
                li.id = 'song-' + song.id;
                li.innerHTML = `
                    <span class="${song.completed ? 'completed' : ''}">${song.song}</span>
                    <span class="song-requester"><i>${song.name}</i></span>
                    <div>
                        <button class="btn-action btn ${song.completed ? 'btn-warning' : 'btn-success'} btn-sm" data-id="${song.id}" data-action="${song.completed ? 'uncomplete' : 'complete'}">
                            ${song.completed ? '취소' : '완료'}
                        </button>
                        <button class="btn-action btn ${song.archived ? 'btn-secondary' : 'btn-danger'} btn-sm" data-id="${song.id}" data-action="${song.archived ? 'unarchive' : 'archive'}">
                            ${song.archived ? '복원' : '제거'}
                        </button>
                    </div>`;
                document.getElementById('song-list').appendChild(li);
            });

            socket.on('songComplete', function(id) {
                updateSongElement(id, true);
            });

            socket.on('songUncomplete', function(id) {
                updateSongElement(id, false);
            });

            socket.on('songArchive', function(id) {
                updateSongElement(id, undefined, true);
            });

            socket.on('songUnarchive', function(id) {
                updateSongElement(id, undefined, false);
            });

            socket.on('reset', function() {
                location.reload();  // 페이지를 새로고침하여 리셋된 데이터 반영
            });
        });
    </script>
</body>
</html>
